// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: tag.sql

package db

import (
	"context"
)

const countTag = `-- name: CountTag :one
SELECT COUNT(*) FROM "tags"
`

func (q *Queries) CountTag(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, countTag)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createTag = `-- name: CreateTag :one
INSERT INTO "tags" ("name")
VALUES ($1) RETURNING id, name
`

func (q *Queries) CreateTag(ctx context.Context, name string) (Tag, error) {
	row := q.db.QueryRowContext(ctx, createTag, name)
	var i Tag
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const findTag = `-- name: FindTag :one
SELECT id, name FROM "tags" WHERE id = $1
`

func (q *Queries) FindTag(ctx context.Context, id int32) (Tag, error) {
	row := q.db.QueryRowContext(ctx, findTag, id)
	var i Tag
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
