// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"time"

	"github.com/google/uuid"
)

type Article struct {
	ID          int32     `json:"id"`
	Title       string    `json:"title"`
	AuthorID    int32     `json:"author_id"`
	Content     string    `json:"content"`
	PublishedAt time.Time `json:"published_at"`
}

type ArticleCategory struct {
	ArticleID  int32 `json:"article_id"`
	CategoryID int32 `json:"category_id"`
}

type ArticleTag struct {
	ArticleID int32 `json:"article_id"`
	TagID     int32 `json:"tag_id"`
}

type Category struct {
	ID   int32  `json:"id"`
	Name string `json:"name"`
}

type Comment struct {
	ID          int32     `json:"id"`
	ArticleID   int32     `json:"article_id"`
	UserID      int32     `json:"user_id"`
	CommentDate time.Time `json:"comment_date"`
	Content     string    `json:"content"`
}

type Image struct {
	ID        int32  `json:"id"`
	ArticleID int32  `json:"article_id"`
	Url       string `json:"url"`
}

type Like struct {
	ID        int32 `json:"id"`
	ArticleID int32 `json:"article_id"`
	UserID    int32 `json:"user_id"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       int32     `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Tag struct {
	ID   int32  `json:"id"`
	Name string `json:"name"`
}

type User struct {
	ID             int32  `json:"id"`
	FullName       string `json:"full_name"`
	Email          string `json:"email"`
	HashedPassword string `json:"hashed_password"`
}

type View struct {
	ID        int32     `json:"id"`
	ArticleID int32     `json:"article_id"`
	ViewDate  time.Time `json:"view_date"`
}
