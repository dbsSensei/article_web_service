// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: view.sql

package db

import (
	"context"
	"time"
)

const countArticleViewsByArticleId = `-- name: CountArticleViewsByArticleId :one
SELECT COUNT(*)
FROM "views"
WHERE "article_id" = $1
`

func (q *Queries) CountArticleViewsByArticleId(ctx context.Context, articleID int32) (int64, error) {
	row := q.db.QueryRowContext(ctx, countArticleViewsByArticleId, articleID)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createView = `-- name: CreateView :exec
INSERT INTO "views" ("article_id", "view_date")
VALUES ($1, $2) RETURNING id, article_id, view_date
`

type CreateViewParams struct {
	ArticleID int32     `json:"article_id"`
	ViewDate  time.Time `json:"view_date"`
}

func (q *Queries) CreateView(ctx context.Context, arg CreateViewParams) error {
	_, err := q.db.ExecContext(ctx, createView, arg.ArticleID, arg.ViewDate)
	return err
}
